from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from app.bot.config import settings
from app.db.models import TravelRequest
from datetime import datetime, timedelta
import logging

logger = logging.getLogger(__name__)

async def send_request_notification(bot, request_data: dict, admin_ids: list):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ"""
    try:
        status_emoji = {
            "pending": "‚è≥",
            "approved": "‚úÖ",
            "rejected": "‚ùå",
            "cancelled": "üö´"
        }.get(request_data.get('status', 'pending'), "‚ùì")

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ UTC+3
        created_at = datetime.fromisoformat(request_data.get('created_at', '').replace('Z', '+00:00'))
        created_at = created_at + timedelta(hours=3)

        message = (
            f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\n"
            f"ID: {request_data.get('id')}\n"
            f"–¢—É—Ä: {request_data.get('tour', {}).get('title', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"–°—Ç–∞—Ç—É—Å: {status_emoji} {request_data.get('status', 'pending')}\n"
            f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {created_at.strftime('%d.%m.%Y %H:%M')} (UTC+3)\n\n"
        )

        if request_data.get('user'):
            message += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {request_data['user'].get('username', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        else:
            message += (
                f"–ì–æ—Å—Ç—å:\n"
                f"–ò–º—è: {request_data.get('guest_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"Email: {request_data.get('guest_email', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {request_data.get('guest_phone', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            )

        if request_data.get('comment'):
            message += f"\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {request_data['comment']}"

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º
        keyboard = []
        for new_status in ["approved", "rejected", "cancelled"]:
            keyboard.append([
                InlineKeyboardButton(
                    f"–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {new_status}",
                    callback_data=f"status_{request_data['id']}_{new_status}"
                )
            ])
        keyboard.append([InlineKeyboardButton("üìù –í—Å–µ –∑–∞—è–≤–∫–∏", callback_data="admin_requests")])
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        for admin_id in admin_ids:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —á–∞—Ç
                try:
                    chat = await bot.get_chat(admin_id)
                    if chat:
                        try:
                            await bot.send_message(
                                chat_id=admin_id,
                                text=message,
                                reply_markup=reply_markup
                            )
                        except Exception as e:
                            logger.error(f"Error sending message to admin {admin_id}: {e}")
                            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫
                            try:
                                await bot.send_message(
                                    chat_id=admin_id,
                                    text=message
                                )
                            except Exception as e2:
                                logger.error(f"Error sending plain message to admin {admin_id}: {e2}")
                except Exception as e:
                    logger.error(f"Error checking chat for admin {admin_id}: {e}")
                    continue
            except Exception as e:
                logger.error(f"Error processing admin {admin_id}: {e}")

    except Exception as e:
        logger.error(f"Error in send_request_notification: {e}")

async def send_group_notification(request: TravelRequest):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
    try:
        bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = "üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—É—Ä!\n\n"
        message += f"ID –∑–∞—è–≤–∫–∏: {request.id}\n"
        message += f"–¢—É—Ä: {request.tour.title}\n"
        # –î–æ–±–∞–≤–ª—è–µ–º 3 —á–∞—Å–∞ –∫ –≤—Ä–µ–º–µ–Ω–∏
        created_at = request.created_at + timedelta(hours=3)
        message += f"–î–∞—Ç–∞: {created_at.strftime('%d.%m.%Y %H:%M')} (UTC+3)\n\n"
        
        if request.user_id:
            message += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {request.user.username}\n"
        else:
            message += (
                f"–ì–æ—Å—Ç—å: {request.guest_name}\n"
                f"Email: {request.guest_email}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {request.guest_phone}\n"
            )
        
        if request.comment:
            message += f"\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {request.comment}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º
        keyboard = []
        for new_status in ["approved", "rejected", "cancelled"]:
            keyboard.append([
                InlineKeyboardButton(
                    f"–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {new_status}",
                    callback_data=f"status_{request.id}_{new_status}"
                )
            ])
        keyboard.append([InlineKeyboardButton("üìù –í—Å–µ –∑–∞—è–≤–∫–∏", callback_data="admin_requests")])
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        admin_id = 1448953141  # –í–∞—à ID
        try:
            logger.info(f"Attempting to send message to admin {admin_id}")
            
            # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            try:
                await bot.send_message(
                    chat_id=admin_id,
                    text=message,
                    reply_markup=reply_markup,
                    parse_mode='HTML'
                )
                logger.info(f"Successfully sent message to admin {admin_id}")
            except Exception as e:
                logger.error(f"Error sending message with buttons to admin {admin_id}: {e}")
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏, –ø—Ä–æ–±—É–µ–º –±–µ–∑ –Ω–∏—Ö
                try:
                    await bot.send_message(
                        chat_id=admin_id,
                        text=message,
                        parse_mode='HTML'
                    )
                    logger.info(f"Successfully sent plain message to admin {admin_id}")
                except Exception as e2:
                    logger.error(f"Error sending plain message to admin {admin_id}: {e2}")
                    
        except Exception as e:
            logger.error(f"Error in admin notification: {e}")
            
    except Exception as e:
        logger.error(f"Error in send_group_notification: {e}") 